{"version":3,"sources":["components/SelectMode.jsx","components/CalendarHeader.jsx","components/Events.jsx","components/Calendar.jsx","App.js","index.js"],"names":["SelectMode","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","onClick","props","changeMode","Component","CalendarHeader","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","renderTitle","_this$props","title","mode","moment","format","endFormat","startOfWeek","startOf","endOf","isSame","endOfWeek","renderDaysTitle","showDaysTitle","_this$props2","showSelectMode","prevMonth","subtract","nextMonth","add","sub","components_SelectMode","Events","returnEvents","selected","selectedDate","events","filter","date","index","title_start","title_end","map","event","name","time","body","Calendar","addEvent","e","toConsumableArray","state","push","setState","onDateClick","day","currentContext","renderWeek","_this$state","currentDate","formattedDate","days","_loop","i","cloneDay","clone","renderMonth","_this$state2","monthStart","monthEnd","startDate","rows","_loop2","_this$state3","id","components_CalendarHeader","components_Events","App","components_Calendar","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"uOAkBeA,EAhBf,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAGI,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQE,QAAWb,KAAKc,MAAMC,WAAYH,UAAU,cAApD,SAGAH,EAAAC,EAAAC,cAAA,UAAQE,QAAWb,KAAKc,MAAMC,WAAYH,UAAU,cAApD,aARRhB,EAAA,CAAgCoB,6BC0DjBC,EAxDf,SAAApB,GAAA,SAAAoB,IAAA,IAAAC,EAAAC,EAAArB,OAAAC,EAAA,EAAAD,CAAAE,KAAAiB,GAAA,QAAAG,EAAAhB,UAAAiB,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAApB,UAAAoB,GAAA,OAAAL,EAAArB,OAAAG,EAAA,EAAAH,CAAAE,MAAAkB,EAAApB,OAAAI,EAAA,EAAAJ,CAAAmB,IAAAQ,KAAAtB,MAAAe,EAAA,CAAAlB,MAAA0B,OAAAJ,MACIK,YAAc,WAAK,IAAAC,EACST,EAAKL,MAArBe,EADOD,EACPC,MAAOC,EADAF,EACAE,KAEf,GAAa,UAATA,EAEA,OADkBC,IAAOF,GAAOG,OAAO,aAEpC,GAAa,SAATF,EAAiB,CACxB,IACIG,EADEC,EAAcH,IAAOF,GAAOM,QAAQ,QAAQH,OAAO,SAIrDC,EADAF,IAAOA,IAAOF,GAAOO,MAAM,SAASC,OAAON,IAAOF,GAAOM,QAAQ,QAAS,SAC9D,IAEA,QAEhB,IAAMG,EAAYP,IAAOF,GAAOO,MAAM,QAAQJ,OAAOC,GAErD,SAAAP,OAAUQ,EAAV,OAAAR,OAA2BY,KAlBvCnB,EAsBIoB,gBAAkB,WACd,GAAIpB,EAAKL,MAAM0B,cACf,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,KACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,KACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,KACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,KACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,KACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,KACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,OAhChBO,EAAA,OAAArB,OAAAO,EAAA,EAAAP,CAAAmB,EAAApB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAmB,EAAA,EAAAV,IAAA,SAAAC,MAAA,WAqCa,IAAAiC,EACkCzC,KAAKc,MAApCe,EADHY,EACGZ,MAAOC,EADVW,EACUX,KAAMY,EADhBD,EACgBC,eACjBC,EAAYZ,IAAOA,IAAOF,GAAOe,SAAS,EAAG,WAAWZ,OAAO,OAC/Da,EAAYd,IAAOA,IAAOF,GAAOiB,IAAI,EAAG,WAAWd,OAAO,OAElE,OACAvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAY,mBAAmBC,QAAWb,KAAKc,MAAMiC,KAAgB,UAATjB,EAAoBa,EAAY,QACpGlC,EAAAC,EAAAC,cAAA,QAAME,QAAYb,KAAKc,MAAMlB,WAAagB,UAAU,iBAAiBZ,KAAK2B,eAC1ElB,EAAAC,EAAAC,cAAA,UAAQC,UAAY,mBAAmBC,QAAWb,KAAKc,MAAMgC,KAAiB,UAAThB,EAAoBe,EAAY,SAExG7C,KAAKuC,kBACJG,EAAkBjC,EAAAC,EAAAC,cAACqC,EAAD,CAAYjC,WAAYf,KAAKc,MAAMC,aAAgB,QAlD/EE,EAAA,CAAoCD,aCwCrBiC,EAzCf,SAAApD,GAAA,SAAAoD,IAAA,IAAA/B,EAAAC,EAAArB,OAAAC,EAAA,EAAAD,CAAAE,KAAAiD,GAAA,QAAA7B,EAAAhB,UAAAiB,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAApB,UAAAoB,GAAA,OAAAL,EAAArB,OAAAG,EAAA,EAAAH,CAAAE,MAAAkB,EAAApB,OAAAI,EAAA,EAAAJ,CAAAmD,IAAAxB,KAAAtB,MAAAe,EAAA,CAAAlB,MAAA0B,OAAAJ,MACI4B,aAAe,WACX,IAAMC,EAAWpB,IAAOZ,EAAKL,MAAMsC,cAAcpB,OAAO,cAClDqB,EAASlC,EAAKL,MAAMuC,OAAOC,OAAO,SAACC,EAAMC,GAAW,OAAOD,EAAKA,OAASJ,IAC/E,OAAIE,EACOA,EAAO,GAAGA,OAEV,IAPnBlC,EAAA,OAAArB,OAAAO,EAAA,EAAAP,CAAAmD,EAAApD,GAAAC,OAAAQ,EAAA,EAAAR,CAAAmD,EAAA,EAAA1C,IAAA,SAAAC,MAAA,WAYc,IAAC4C,EAAgBpD,KAAKc,MAArBsC,aACDK,EAAc1B,IAAOqB,GAAcpB,OAAO,QAC1C0B,EAAY3B,IAAOqB,GAAcpB,OAAO,UACxCqB,EAASrD,KAAKkD,eACpB,OACAzC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,iBAAjB,GAAAc,OACQ+B,EADR,MAAA/B,OACwBgC,KAG5BjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdyC,EAAOM,IAAI,SAACC,EAAOrD,GAChB,OACAE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaL,IAAOA,GAC/BE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcgD,EAAMC,MAClCpD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcgD,EAAME,OAExCrD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAqBgD,EAAMG,eA/B5Dd,EAAA,CAA4BjC,aCEtBqC,EAAS,CACb,CACIE,KAAM,aACNF,OAAO,CACH,CAACQ,KAAK,aAAcE,KAAM,aAAcD,KAAM,SAC9C,CAACD,KAAK,cAAeE,KAAM,aAAcD,KAAM,WAGvD,CACIP,KAAM,aACNF,OAAO,CACH,CAACQ,KAAK,UAAWE,KAAM,UAAWD,KAAM,WAGhD,CACEP,KAAM,aACNF,OAAO,CACH,CAACQ,KAAK,UAAWE,KAAM,UAAWD,KAAM,YAuLjCE,EAlLf,SAAAnE,GACE,SAAAmE,EAAYlD,GAAM,IAAAK,EAAA,OAAArB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,IAChB7C,EAAArB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAAvC,KAAAzB,KAAMc,KAaRmD,SAAW,WACT,IAAMC,EAACpE,OAAAqE,EAAA,EAAArE,CAAOqB,EAAKiD,MAAMf,QACzBa,EAAEG,KAAK,CAACd,KAAMxB,IAAOZ,EAAKiD,MAAMhB,cAAcpB,OAAO,cAAeqB,OAAQ,CAAC,CAACQ,KAAK,iBAAkBE,KAAM,YAAaD,KAAM,YAC9H3C,EAAKmD,SAAS,CAACjB,OAAQa,KAjBP/C,EAoBlBJ,WAAa,WACa,UAApBI,EAAKiD,MAAMtC,KACbX,EAAKmD,SAAS,CAACxC,KAAM,SACQ,SAApBX,EAAKiD,MAAMtC,MACpBX,EAAKmD,SAAS,CAACxC,KAAM,UAEvBX,EAAKmD,SAAS,CAAC5B,gBAAgB,EAAOF,eAAe,KA1BrCrB,EA6BlBvB,WAAa,YACuB,IAA9BuB,EAAKiD,MAAM1B,eACXvB,EAAKmD,SAAS,CAAC5B,gBAAgB,EAAMF,eAAe,IAEpDrB,EAAKmD,SAAS,CAAC5B,gBAAgB,EAAOF,eAAe,KAjCzCrB,EAqClBoD,YAAc,SAAAC,GACZrD,EAAKmD,SAAS,CACZlB,aAAcoB,KAvCArD,EA2ClB2B,IAAM,WACoB,UAApB3B,EAAKiD,MAAMtC,MACbX,EAAKmD,SAAS,CACZG,eAAgB1C,IAAOZ,EAAKiD,MAAMK,gBAAgB3B,IAAI,EAAG,YAE3D3B,EAAKmD,SAAS,CAAClB,aAAcrB,IAAOZ,EAAKiD,MAAMhB,cAAcN,IAAI,EAAE,YACtC,SAApB3B,EAAKiD,MAAMtC,OACpBX,EAAKmD,SAAS,CACZG,eAAgB1C,IAAOZ,EAAKiD,MAAMK,gBAAgB3B,IAAI,EAAG,UAE3D3B,EAAKmD,SAAS,CAAClB,aAAcrB,IAAOZ,EAAKiD,MAAMhB,cAAcN,IAAI,EAAE,YArDrD3B,EAyDlB4B,IAAM,WACoB,UAApB5B,EAAKiD,MAAMtC,MACbX,EAAKmD,SAAS,CACZG,eAAgB1C,IAAOZ,EAAKiD,MAAMK,gBAAgB7B,SAAS,EAAG,YAEhEzB,EAAKmD,SAAS,CAAClB,aAAcrB,IAAOZ,EAAKiD,MAAMhB,cAAcR,SAAS,EAAE,YAC3C,SAApBzB,EAAKiD,MAAMtC,OAClBX,EAAKmD,SAAS,CACZG,eAAgB1C,IAAOZ,EAAKiD,MAAMK,gBAAgB7B,SAAS,EAAG,UAElEzB,EAAKmD,SAAS,CAAClB,aAAcrB,IAAOZ,EAAKiD,MAAMhB,cAAcR,SAAS,EAAE,YAnE1DzB,EAuElBuD,WAAa,WAAM,IAEbxC,EAFayC,EACqBxD,EAAKiD,MAAnChB,EADSuB,EACTvB,aAAcwB,EADLD,EACKC,YAGpB1C,EAAcH,IAAOZ,EAAKiD,MAAMhB,cAAcjB,QAAQ,QAMtD,IAJF,IACI0C,EADEC,EAAO,GAETN,EAAMtC,EARO6C,EAAA,SAUNC,GACT,IAAMC,EAAWT,EAEjBK,EAAgB9C,IAAOyC,GAAKxC,OAAO,KACjC8C,EAAKT,KACH5D,EAAAC,EAAAC,cAAA,OAAKC,UAAS,mBAAAc,OACJ,IAANsD,EAAW,UAAmB,IAANA,EAAW,UAAY,GADrC,gBAAAtD,OAEXK,IAAOyC,GAAKnC,OAAOuC,EAAa,OAAS,UAAY,WAF1C,gBAAAlD,OAGXK,IAAOyC,GAAKnC,OAAOe,EAAc,OAAS,WAAa,YAC1D7C,IAAQiE,EACR3D,QAAU,kBAAMM,EAAKoD,YAAYxC,IAAOkD,EAAU,iBAElDxE,EAAAC,EAAAC,cAAA,SAAIkE,KAIRL,EAAMA,EAAIU,QAAQpC,IAAI,EAAG,MAhBhBkC,EAAI,EAAGA,EAAI,EAAGA,IAAKD,EAAnBC,GAkBX,OACEvE,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QACbkE,KAtGQ3D,EA4GlBgE,YAAc,WAWV,IAXgB,IAAAC,EACoBjE,EAAKiD,MAAnChB,EADUgC,EACVhC,aAAcwB,EADJQ,EACIR,YAChBS,EAAatD,IAAOqB,GAAcjB,QAAQ,SAC1CmD,EAAWvD,IAAOsD,GAAYjD,MAAM,SACpCmD,EAAYxD,IAAOsD,GAAYlD,QAAQ,QACvCqD,EAAO,GAETV,EAAO,GACPN,EAAMe,EACNV,EAAgB,GAEXL,GAAOc,GAAU,CACtB,IADsB,IAAAG,EAAA,SACbT,GACPH,EAAgB9C,IAAOyC,GAAKxC,OAAO,KACnC,IAAMiD,EAAWT,EAEZzC,IAAOyC,GAAKnC,OAAOgD,EAAY,SAKlCP,EAAKT,KACH5D,EAAAC,EAAAC,cAAA,OAAKC,UAAS,yBAAAc,OACF,IAANsD,EAAW,UAAmB,IAANA,EAAW,UAAY,GADvC,sBAAAtD,OAETK,IAAOyC,GAAKnC,OAAOuC,EAAa,OAAS,UAAY,WAF5C,sBAAAlD,OAGTK,IAAOyC,GAAKnC,OAAOe,EAAc,OAAS,WAAa,YAC1D7C,IAAOiE,EACP3D,QAAS,kBAAMM,EAAKoD,YAAYxC,IAAOkD,EAAU,iBAEnDxE,EAAAC,EAAAC,cAAA,SAAIkE,KAZNC,EAAKT,KACH5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQL,IAAOiE,KAelCA,EAAMzC,IAAOyC,GAAK1B,IAAI,EAAG,SArBlBkC,EAAI,EAAGA,EAAI,EAAGA,IAAKS,EAAnBT,GAuBTQ,EAAKnB,KACH5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOL,IAAOiE,GAC1BM,IAGLA,EAAO,GAEX,OAAOrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAU4E,IApJhCrE,EAAKiD,MAAQ,CACXtC,KAAM,QACN2C,eAAgB1C,MAChBqB,aAAcrB,MACd6C,YAAa7C,MACbW,gBAAiB,EACjBF,eAAgB,EAChBa,OAAQA,GATMlC,EADpB,OAAArB,OAAAO,EAAA,EAAAP,CAAAkE,EAAAnE,GAAAC,OAAAQ,EAAA,EAAAR,CAAAkE,EAAA,EAAAzD,IAAA,SAAAC,MAAA,WA0JW,IAAAkF,EAC6D1F,KAAKoE,MAAlEtC,EADA4D,EACA5D,KAAMsB,EADNsC,EACMtC,aAAcV,EADpBgD,EACoBhD,eAAgBF,EADpCkD,EACoClD,cAAea,EADnDqC,EACmDrC,OAC1D,OACE5C,EAAAC,EAAAC,cAAA,OAAKgF,GAAG,YACNlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UAAQE,QAASb,KAAKiE,UAAtB,MAEFxD,EAAAC,EAAAC,cAACiF,EAAD,CAAgB/D,MAASuB,EACTtB,KAAQA,EACRgB,IAAO9C,KAAK8C,IACZC,IAAO/C,KAAK+C,IACZhC,WAAcf,KAAKe,WACnB2B,eAAkBA,EAClBF,cAAiBA,EACjB5C,WAAcI,KAAKJ,aAEtB,UAATkC,EAAqB9B,KAAKmF,cAA2B,SAATrD,EAAoB9B,KAAK0E,aAAe,GACxFjE,EAAAC,EAAAC,cAACkF,EAAD,CAAQxC,OAAQA,EAAQD,aAAgBA,SA5KhDY,EAAA,CAA8BhD,aCbf8E,0LARX,OACErF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoF,EAAD,cAJY/E,cCAlBgF,IAASC,OAAOxF,EAAAC,EAAAC,cAACuF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c770a38f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class SelectMode extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"selectmode\">\r\n        <button onClick = {this.props.changeMode} className=\"selectmode\"> \r\n            Month\r\n        </button>\r\n        <button onClick = {this.props.changeMode} className=\"selectmode\">\r\n            Week\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SelectMode\r\n","import React, { Component } from 'react';\r\nimport SelectMode from './SelectMode';\r\nimport moment from 'moment';\r\n\r\nexport class CalendarHeader extends Component {\r\n    renderTitle = () =>{\r\n        const { title, mode } = this.props;   \r\n\r\n        if (mode === 'month'){\r\n            const monthYear = moment(title).format(\"YYYY MMMM\");  \r\n            return monthYear;\r\n        } else if (mode === 'week') {\r\n            const startOfWeek = moment(title).startOf('week').format('MMM D');\r\n            let endFormat;\r\n\r\n            if (moment(moment(title).endOf('week')).isSame(moment(title).startOf('week'), 'month')){\r\n                endFormat = 'D';\r\n            } else {\r\n                endFormat = 'MMM D';\r\n            }\r\n            const endOfWeek = moment(title).endOf('week').format(endFormat);\r\n\r\n            return `${startOfWeek} - ${endOfWeek}`;\r\n        }\r\n    }\r\n\r\n    renderDaysTitle = () => {\r\n        if (this.props.showDaysTitle) \r\n        return (\r\n            <div className=\"days-of-week\">\r\n                <span className=\"day-of-week\">S</span>\r\n                <span className=\"day-of-week\">M</span>\r\n                <span className=\"day-of-week\">T</span>\r\n                <span className=\"day-of-week\">W</span>\r\n                <span className=\"day-of-week\">T</span>\r\n                <span className=\"day-of-week\">F</span>\r\n                <span className=\"day-of-week\">S</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {  \r\n        const { title, mode, showSelectMode} = this.props,\r\n            prevMonth = moment(moment(title).subtract(1, 'months')).format(\"MMM\"),\r\n            nextMonth = moment(moment(title).add(1, 'months')).format(\"MMM\");\r\n\r\n    return (\r\n    <div className=\"calendar-header\">\r\n        <div className=\"calendar-navigation\">\r\n            <button className = \"nav-btn prev-btn\" onClick = {this.props.sub}>{(mode === 'month') ? prevMonth : 'prev'}</button>\r\n            <span onClick = { this.props.SelectMode } className=\"current-month\">{this.renderTitle()}</span>\r\n            <button className = \"nav-btn next-btn\" onClick = {this.props.add }>{(mode === 'month') ? nextMonth : 'next'}</button>\r\n        </div>\r\n        {this.renderDaysTitle()}\r\n        {(showSelectMode) ? <SelectMode changeMode={this.props.changeMode}/> : ''}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CalendarHeader","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nexport class Events extends Component {\r\n    returnEvents = () =>{\r\n        const selected = moment(this.props.selectedDate).format(\"DD-MM-YYYY\"),\r\n              events = this.props.events.filter((date, index) => {return date.date === selected;});\r\n        if (events) {\r\n            return events[0].events\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n  \r\n    render() {\r\n        const {selectedDate} = this.props,\r\n              title_start = moment(selectedDate).format(\"dddd\"),\r\n              title_end = moment(selectedDate).format(\"D MMMM\"),\r\n              events = this.returnEvents();\r\n        return (\r\n        <div className = 'events-container'>\r\n            <div className = 'event-header'>\r\n                <div className = 'selected-date'>\r\n                    {`${title_start}, ${title_end}`}\r\n                </div>\r\n            </div>\r\n            <div className=\"event-list\">\r\n            {events.map((event, key) => {\r\n                return (\r\n                <div className=\"event-item\" key = {key}>\r\n                    <div className=\"row\">\r\n                        <h5 className=\"event-name\">{event.name}</h5>\r\n                        <span className=\"event-time\">{event.time}</span>\r\n                    </div>\r\n                    <p className=\"event-description\">{event.body}</p>\r\n                </div>);\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    }\r\n\r\nexport default Events\r\n","import React, { Component } from 'react';\r\nimport CalendarHeader from './CalendarHeader';\r\nimport Events from './Events';\r\nimport moment from 'moment';\r\n\r\nconst events = [\r\n  {\r\n      date: '13-02-2019',\r\n      events:[\r\n          {name:'event name', body: 'event body', time: '11:00'},\r\n          {name:'event name2', body: 'event bod2', time: '12:00'}\r\n      ]\r\n  },\r\n  {\r\n      date: '20-02-2019',\r\n      events:[\r\n          {name:'event 3', body: 'event 3', time: '12:00'}\r\n      ]\r\n  },\r\n  {\r\n    date: '12-02-2019',\r\n    events:[\r\n        {name:'event 3', body: 'event 3', time: '12:00'}\r\n    ]\r\n}\r\n];\r\n\r\nexport class Calendar extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      mode: 'month',\r\n      currentContext: moment(),\r\n      selectedDate: moment(),\r\n      currentDate: moment(),\r\n      showSelectMode : false,\r\n      showDaysTitle : true,\r\n      events: events\r\n    }\r\n  }\r\n\r\n  //Скрывание выбора мода\r\n  addEvent = () => {\r\n    const e = [...this.state.events];\r\n    e.push({date: moment(this.state.selectedDate).format(\"DD-MM-YYYY\"), events: [{name:'event zeleboba', body: 'kebabster', time: '13:00'}]});\r\n    this.setState({events: e});\r\n  }\r\n\r\n  changeMode = () => {\r\n    if (this.state.mode === 'month'){\r\n      this.setState({mode: 'week'});\r\n    } else if (this.state.mode === 'week') {\r\n      this.setState({mode: 'month'});\r\n    }\r\n    this.setState({showSelectMode: false, showDaysTitle: true});\r\n  }\r\n\r\n  SelectMode = () =>{\r\n    if (this.state.showSelectMode === false){\r\n        this.setState({showSelectMode: true, showDaysTitle: false});\r\n    } else {\r\n        this.setState({showSelectMode: false, showDaysTitle: true});\r\n    }\r\n  }\r\n\r\n  onDateClick = day => {\r\n    this.setState({\r\n      selectedDate: day\r\n    });\r\n  }\r\n\r\n  add = () => {\r\n    if (this.state.mode === 'month'){\r\n      this.setState({\r\n        currentContext: moment(this.state.currentContext).add(1, 'months')\r\n      });\r\n      this.setState({selectedDate: moment(this.state.selectedDate).add(1,'month')});\r\n    } else if (this.state.mode === 'week') {\r\n      this.setState({\r\n        currentContext: moment(this.state.currentContext).add(1, 'week')\r\n      });\r\n      this.setState({selectedDate: moment(this.state.selectedDate).add(1,'week')});\r\n    } \r\n  }\r\n\r\n  sub = () => {\r\n    if (this.state.mode === 'month'){\r\n      this.setState({\r\n        currentContext: moment(this.state.currentContext).subtract(1, 'months')\r\n      });\r\n      this.setState({selectedDate: moment(this.state.selectedDate).subtract(1,'month')});\r\n    } else if (this.state.mode === 'week') {\r\n        this.setState({\r\n          currentContext: moment(this.state.currentContext).subtract(1, 'week')\r\n      });\r\n      this.setState({selectedDate: moment(this.state.selectedDate).subtract(1,'week')});\r\n    } \r\n  }\r\n\r\n  renderWeek = () => {\r\n    const { selectedDate, currentDate } = this.state;\r\n    let startOfWeek;\r\n\r\n      startOfWeek = moment(this.state.selectedDate).startOf('week');\r\n   \r\n    const days = [];\r\n    let formattedDate,\r\n        day = startOfWeek;\r\n\r\n      for (let i = 0; i < 7; i++) {\r\n      const cloneDay = day;\r\n\r\n      formattedDate = moment(day).format(\"D\");\r\n        days.push(\r\n          <div className = {`day \r\n          ${ (i === 0) ? \"weekend\" : (i === 6) ? \"weekend\" : \"\" }\r\n          ${ moment(day).isSame(currentDate, 'day') ? \"current\" : 'ordinary' }\r\n          ${ moment(day).isSame(selectedDate, 'day') ? \"selected\" : 'ordinary'}` }\r\n          key = { day }\r\n          onClick={ () => this.onDateClick(moment(cloneDay, \"MM-DD-YYYY\"))}\r\n          >\r\n          <p>{formattedDate}</p>\r\n          </div>\r\n        );\r\n\r\n      day = day.clone().add(1, 'd');\r\n    }\r\n    return(   \r\n      <div className = \"month\">\r\n        <div className = \"week\">\r\n          { days }\r\n        </div>\r\n      </div>      \r\n    ); \r\n  }\r\n\r\n  renderMonth = () => {\r\n    const { selectedDate, currentDate } = this.state;\r\n    const monthStart = moment(selectedDate).startOf('month'),\r\n          monthEnd = moment(monthStart).endOf('month'),\r\n          startDate = moment(monthStart).startOf('week'),\r\n          rows = [];\r\n          \r\n    let days = [],\r\n        day = startDate,\r\n        formattedDate = \"\";\r\n    \r\n      while (day <= monthEnd) {\r\n        for (let i = 0; i < 7; i++) {\r\n          formattedDate = moment(day).format(\"D\");  \r\n          const cloneDay = day;\r\n\r\n          if (!moment(day).isSame(monthStart, 'month')){\r\n            days.push(\r\n              <div className=\"space\" key = {day}></div>\r\n            );\r\n          } else {\r\n            days.push(\r\n              <div className = {`day \r\n                ${ (i === 0) ? \"weekend\" : (i === 6) ? \"weekend\" : \"\" }\r\n                ${ moment(day).isSame(currentDate, 'day') ? \"current\" : 'ordinary' }\r\n                ${ moment(day).isSame(selectedDate, 'day') ? \"selected\" : 'ordinary'}` }\r\n                key = {day}\r\n                onClick={() => this.onDateClick(moment(cloneDay, \"MM-DD-YYYY\"))}\r\n              >\r\n              <p>{formattedDate}</p>\r\n              </div>\r\n            );\r\n          }\r\n          day = moment(day).add(1, 'days');\r\n        }\r\n        rows.push(\r\n          <div className=\"week\" key = {day}>\r\n            {days}\r\n          </div>\r\n        );\r\n        days = [];\r\n      }\r\n    return <div className=\"month\">{ rows }</div>;\r\n  }\r\n\r\n  render() {\r\n    const {mode, selectedDate, showSelectMode, showDaysTitle, events} = this.state;\r\n    return (\r\n      <div id=\"calendar\">\r\n        <div className=\"add-event-panel\">\r\n          <p>Calendar</p>\r\n          <button onClick={this.addEvent}>+</button>\r\n        </div>\r\n        <CalendarHeader title = {selectedDate}\r\n                        mode = {mode}\r\n                        add = {this.add}\r\n                        sub = {this.sub}\r\n                        changeMode = {this.changeMode}\r\n                        showSelectMode = {showSelectMode} \r\n                        showDaysTitle = {showDaysTitle}\r\n                        SelectMode = {this.SelectMode}\r\n                        />\r\n        { ( mode === 'month' ) ? this.renderMonth() : ( mode === 'week' ) ? this.renderWeek() : '' }\r\n        <Events events={events} selectedDate = {selectedDate}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Calendar","import React, { Component } from 'react';\nimport Calendar from './components/Calendar';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n      <Calendar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}