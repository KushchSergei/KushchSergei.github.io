{"version":3,"sources":["components/SelectMode.jsx","components/AddEvent.jsx","components/Event.jsx","components/CalendarHeader.jsx","components/Day.jsx","components/CalendarBody.jsx","components/EventList.jsx","components/TodayEvents.jsx","components/Events.jsx","Calendar.js","index.js"],"names":["SelectMode","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","props","showSelectMode","react_default","a","createElement","className","onClick","changeMode","Component","AddEvent","call","componentWillReceiveProps","nextProps","addMode","setState","selectedEvent","event","getDefaultState","name","body","time","status","eventAdd","e","preventDefault","addEvent","objectSpread","state","hideAddEvent","cancel","completeChange","onNameHandler","target","onBodyHandler","onTimeHandler","displayAddEvent","form","type","id","onSubmit","placeholder","onChange","required","autoComplete","Event","setSelectedEvent","changeEvent","moment","date","format","changeStatusEvent","deleteEvent","CalendarHeader","toConsumableArray","events","find","day","setEvents","b","length","index","findIndex","splice","add","_this$props","mode","currentContext","selectedDate","setCurrentContext","setSelectedDate","sub","_this$props2","subtract","setMode","showDaysTitle","refs","monthName","classList","remove","selectMode","toggle","_ref","esm_extends","newEvent","before","push","showAddEvent","renderTitle","_this$props3","endFormat","startOfWeek","startOf","endOf","isSame","endOfWeek","concat","_this$props4","prevMonth","nextMonth","components_AddEvent","components_Event","CalendarHeader_AddEventPanel","ref","CalendarHeader_DaysTitle","components_SelectMode","AddEventPanel","_ref2","DaysTitle","_ref3","Day","_getPrototypeOf2","_len","args","Array","_key","showEventMarker","row","i","_this2","currentDate","formattedDate","CalendarBody","renderWeek","days","components_Day","clone","renderMonth","monthStart","monthEnd","rows","EventList","renderEvents","filter","isBetween","map","sort","diff","EventList_EventShortcut","EventShortcut","TodayEvents","currentIndex","translateValue","goToPrevSlide","setIndex","prevState","goToNextSlide","style","transform","transition","TodayEvents_Slide","TodayEvents_LeftArrow","TodayEvents_RightArrow","Slide","fromNow","LeftArrow","RightArrow","Events","title","Events_EventHeader","components_TodayEvents","curIndex","components_EventList","EventHeader","Calendar","data","_this$state","components_CalendarHeader","components_CalendarBody","components_Events","ReactDOM","render","src_Calendar","document","getElementById"],"mappings":"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","file":"static/js/main.2a68400d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class SelectMode extends Component { //компонент предназначеный для выбора режима месяц / неделя\r\n\r\n  render() {\r\n    return (\r\n      (this.props.showSelectMode) ? \r\n      <div className=\"selectmode\">\r\n        <button onClick = {() => this.props.changeMode('month')} className=\"selectmode\"> \r\n            Month\r\n        </button>\r\n        <button onClick = {() => this.props.changeMode('week')} className=\"selectmode\">\r\n            Week\r\n        </button>\r\n      </div>:''\r\n    )\r\n  }\r\n}\r\n\r\nexport default SelectMode\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddEvent extends Component { //компонент предназначеный для добавления новых / редактирования существующих событий\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      body: '',\r\n      time: '',\r\n      status: 'pending'\r\n    }\r\n  }\r\n  componentWillReceiveProps = (nextProps) => { //заполнение состояния в зависимости от режима добавление / редактирование\r\n    if (nextProps.addMode === 'change'){\r\n      this.setState(\r\n        this.props.selectedEvent.event\r\n      );\r\n    } else {\r\n      this.setState(this.getDefaultState());\r\n    }\r\n  }\r\n\r\n  getDefaultState = () => { //значения для состояния по умолчанию\r\n    return {\r\n      name: '',\r\n      body: '',\r\n      time: '',\r\n      status: 'pending'\r\n    };\r\n  }\r\n\r\n  eventAdd = (e) => { //вызов добавления / редактирования событий\r\n    e.preventDefault();\r\n      this.props.addEvent({\r\n        ...this.state\r\n      });\r\n    this.setState(this.getDefaultState());\r\n    this.props.hideAddEvent();\r\n  }\r\n\r\n  cancel = () => { //отмена добавления / редактирования события\r\n    if (this.props.addMode === 'change'){\r\n      this.props.completeChange();\r\n    }\r\n    this.setState(this.getDefaultState());\r\n    this.props.hideAddEvent();\r\n  }\r\n\r\n  onNameHandler = (event) => { //обработка ввода названия события\r\n    this.setState({\r\n      name: event.target.value\r\n    });\r\n  };\r\n\r\n  onBodyHandler = (event) => {//обработка ввода описания события\r\n    this.setState({\r\n      body: event.target.value\r\n    });\r\n  };\r\n\r\n  onTimeHandler = (event) => {//обработка ввода времени старта события\r\n    this.setState({\r\n      time: event.target.value\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className = 'modal-container'>\r\n        {this.props.displayAddEvent ? \r\n        <div className = 'modal modal-add'>\r\n          <div className=\"add-event-header\">\r\n              <button onClick={this.cancel}>✕</button>\r\n              <h5>New event</h5>\r\n              <button form = 'event-form' type=\"submit\">✓</button>\r\n          </div>\r\n          <form id=\"event-form\" className = 'add-event-form' onSubmit = {this.eventAdd}>\r\n            <div className = 'add-event-input-block'>\r\n              <h5>event name</h5>\r\n              <input type = \"text\" name = \"name\" placeholder = 'input here' value = {this.state.name} onChange = {this.onNameHandler} required autoComplete=\"off\"/>\r\n            </div>\r\n            <div className = 'add-event-input-block'>\r\n              <h5>event description</h5>\r\n              <textarea type = \"text\" name = \"body\" placeholder = 'input here' value = {this.state.body} onChange = {this.onBodyHandler} required autoComplete=\"off\"/>\r\n            </div>\r\n            <div className = 'add-event-input-block'>\r\n              <h5>starts</h5>\r\n              <input id = 'timepicker' type = \"time\" name = \"time\" value = {this.state.time} onChange = {this.onTimeHandler} required/>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        : ''}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddEvent\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nexport class Event extends Component { //компонент реализует модальное окно для просмотра информации о событии, запуска его редактирования или смены статуса\r\n    render() {\r\n        const {selectedEvent} = this.props;\r\n        return (\r\n            <div className = 'modal-container'>\r\n                {selectedEvent ?\r\n                <div className = 'modal modal-event'>\r\n                <div className=\"add-event-header\">\r\n                    <button onClick = {() => this.props.setSelectedEvent(null)}>✕</button>\r\n                    <button className='edit-btn' onClick = {() => this.props.changeEvent(selectedEvent.event)}></button>\r\n                </div>\r\n                <div className = 'event-data-container'>\r\n                    <h5>{selectedEvent.event.name}</h5>\r\n                    <h4>{moment(selectedEvent.date,'DD-MM-YYYY').format(\"dddd, D MMM\")}</h4>\r\n                    <div className = 'time-data-row'>\r\n                        <div className = 'starts'><h6>STARTS:</h6> <p>{selectedEvent.event.time}</p></div>\r\n                    </div>\r\n                    <div className = 'event-btn-container'>\r\n                        <div id = 'first-btn' onClick = {() => this.props.changeStatusEvent('completed')}>complete</div>\r\n                        <div onClick = {() => this.props.changeStatusEvent('rejected')}>reject</div>\r\n                        <div id = 'third-btn' onClick = {this.props.deleteEvent}>delete</div>\r\n                    </div>\r\n                    <p>{selectedEvent.event.body}</p>\r\n                </div>\r\n                </div>\r\n                : ''}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event\r\n","import React, { Component } from 'react';\r\nimport SelectMode from './SelectMode';\r\nimport moment from 'moment';\r\nimport AddEvent from './AddEvent';\r\nimport Event from './Event';\r\n\r\nexport class CalendarHeader extends Component { //шапка календаря, в которой происходит смена режимов, месяцев, недель, добавление / редактирование событий\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            displayAddEvent: false,\r\n            showDaysTitle  : true,\r\n            showSelectMode : false,\r\n            addMode: 'add'\r\n        }\r\n    }\r\n\r\n  changeStatusEvent = (status) => { //смена статуса события с помощью кнопок в модальном окне\r\n    let e = [...this.props.events];\r\n    if (this.props.selectedEvent) {\r\n      const b = e.find(day =>{\r\n        return day.date === this.props.selectedEvent.date;\r\n      })\r\n        const event = b.events.find(e => e.time === this.props.selectedEvent.event.time);\r\n        event.status = status;\r\n    }\r\n    this.props.setEvents(e); \r\n    this.props.setSelectedEvent(null);\r\n  }\r\n\r\n  deleteEvent = () =>{ //удаление события с помощью кнопки в модальном окне\r\n    let e = [...this.props.events];\r\n    if (this.props.selectedEvent) {\r\n      const b = e.find(day =>{\r\n        return day.date === this.props.selectedEvent.date;\r\n      })\r\n      if (b.events.length > 1) {\r\n        const index = b.events.findIndex(e => e.time === this.props.selectedEvent.event.time)\r\n        b.events.splice(index, 1);\r\n      } else {\r\n        const index = e.findIndex(e => e.date === this.props.selectedEvent.date)\r\n        e.splice(index, 1);\r\n      }\r\n      this.props.setSelectedEvent(null);\r\n    }\r\n    this.completeChange();\r\n    this.props.setEvents(e); \r\n  }\r\n\r\n  changeEvent = () => { //отображение модального окна для редактирования / добавления события, смена режима на редактирование\r\n    this.setState({displayAddEvent: true, addMode: 'change'});\r\n  }\r\n\r\n  completeChange = () =>{ //завершение редактирования события, смена режима на добавление\r\n    this.setState({displayAddEvent: false, addMode: 'add'});\r\n  }\r\n\r\n  add = () => { //прибавить месяц / неделю в зависимости от режима к текущей выбранной дате\r\n      const {mode, currentContext,selectedDate} = this.props;\r\n      if (mode === 'month'){\r\n        this.props.setCurrentContext(moment(currentContext).add(1, 'months'));\r\n        this.props.setSelectedDate(moment(selectedDate).add(1,'month'));\r\n      } else if (this.props.mode === 'week') {\r\n        this.props.setCurrentContext(moment(currentContext).add(1, 'week'));\r\n        this.props.setSelectedDate(moment(selectedDate).add(1,'week'));\r\n      } \r\n    }\r\n\r\n  sub = () => { //вычесть месяц / неделю в зависимости от режима из текущей выбранной даты\r\n      const {mode, currentContext,selectedDate} = this.props;\r\n      if (mode === 'month'){\r\n        this.props.setCurrentContext(moment(currentContext).subtract(1, 'months'));\r\n        this.props.setSelectedDate(moment(selectedDate).subtract(1,'month'));\r\n      } else if (this.props.mode === 'week') {\r\n        this.props.setCurrentContext(moment(currentContext).subtract(1, 'week'));\r\n        this.props.setSelectedDate(moment(selectedDate).subtract(1,'week'));\r\n      } \r\n    }\r\n\r\n  changeMode = (mode) => { //сменить режим неделя / месяц\r\n      this.props.setMode(mode);\r\n      this.setState({showSelectMode: false, showDaysTitle: true});\r\n      this.refs.monthName.classList.remove(\"active\");\r\n    }    \r\n\r\n  selectMode = () =>{ //скрыть / отобразить панель для выбора режима месяц / неделя и подписей кдням недели\r\n      if (this.state.showSelectMode === false){\r\n          this.setState({showSelectMode: true, showDaysTitle: false});\r\n          this.refs.monthName.classList.toggle(\"active\");\r\n      } else {\r\n          this.setState({showSelectMode: false, showDaysTitle: true});\r\n          this.refs.monthName.classList.remove(\"active\");\r\n      }\r\n    }    \r\n\r\n  addEvent = ({...event}) => { //добавить или редактировать событие, в зависимости от режима\r\n    let e = [...this.props.events];\r\n    if (this.state.addMode === 'add'){\r\n        let before = e.find(day =>{\r\n            return day.date === this.props.selectedDate.format(\"DD-MM-YYYY\");\r\n        });\r\n        let newEvent;\r\n        if (!before) {\r\n          newEvent = {\r\n            date: this.props.selectedDate.format(\"DD-MM-YYYY\"),\r\n            events: [event]\r\n          };\r\n          e.push(newEvent);\r\n        } else {\r\n          before.events.push(event);\r\n        }\r\n      } else if (this.state.addMode === 'change') {\r\n        let b = e.find(day =>{\r\n          return day.date === this.props.selectedEvent.date;\r\n        })\r\n        const index = b.events.findIndex(e => e.time === this.props.selectedEvent.event.time);\r\n        b.events.splice(index, 1, event);\r\n        this.props.setSelectedEvent({date: this.props.selectedEvent.date, event: event});\r\n        this.completeChange();\r\n        }\r\n      this.props.setEvents(e); \r\n    } \r\n\r\n  showAddEvent = () =>{ //отобразить модальное окно добавления / редактирования событий\r\n      this.setState({displayAddEvent: true});\r\n  }\r\n\r\n  hideAddEvent = () =>{ //скрыть модальное окно добавления / редактирования событий\r\n      this.setState({displayAddEvent: false});\r\n  }\r\n\r\n  renderTitle = () =>{ //отображение заголовка с текущим годом и месяцем / месяцем и датой в зависимости от режима отображения\r\n      const { selectedDate, mode } = this.props;   \r\n\r\n      if (mode === 'month'){\r\n          const monthYear = moment(selectedDate).format(\"YYYY MMMM\");  \r\n          return monthYear;\r\n      } else if (mode === 'week') {\r\n          const startOfWeek = moment(selectedDate).startOf('week').format('MMM D');\r\n          let endFormat;\r\n\r\n          if (moment(moment(selectedDate).endOf('week')).isSame(moment(selectedDate).startOf('week'), 'month')){\r\n              endFormat = 'D';\r\n          } else {\r\n              endFormat = 'MMM D';\r\n          }\r\n          const endOfWeek = moment(selectedDate).endOf('week').format(endFormat);\r\n\r\n          return `${startOfWeek} - ${endOfWeek}`;\r\n      }\r\n  }\r\n\r\n    render() {  \r\n        const { selectedDate, mode} = this.props,\r\n              prevMonth = moment(moment(selectedDate).subtract(1, 'months')).format(\"MMM\"),\r\n              nextMonth = moment(moment(selectedDate).add(1, 'months')).format(\"MMM\");\r\n    return (\r\n    <div className=\"calendar-header\">\r\n        <AddEvent addEvent = {this.addEvent}\r\n                  addMode = {this.state.addMode}\r\n                  hideAddEvent = {this.hideAddEvent}\r\n                  displayAddEvent = {this.state.displayAddEvent}\r\n                  changeEvent = {this.changeEvent}\r\n                  selectedEvent = {this.props.selectedEvent}\r\n                  completeChange = {this.completeChange}\r\n                  />\r\n        <Event  selectedEvent = {this.props.selectedEvent}\r\n                setSelectedEvent = {this.props.setSelectedEvent}\r\n                changeEvent = {this.changeEvent}\r\n                deleteEvent = {this.deleteEvent}\r\n                changeStatusEvent = {this.changeStatusEvent}\r\n                />\r\n        <AddEventPanel showAddEvent = {this.showAddEvent}/>\r\n        <div className=\"calendar-navigation\">\r\n          <button className = \"nav-btn prev-btn\" onClick = {this.sub}>{(mode === 'month') ? prevMonth : 'prev'}</button>\r\n          <span onClick = { this.selectMode } className=\"current-month\" ref=\"monthName\">{this.renderTitle()}</span>\r\n          <button className = \"nav-btn next-btn\" onClick = {this.add }>{(mode === 'month') ? nextMonth : 'next'}</button>\r\n        </div>\r\n        <DaysTitle showDaysTitle = {this.state.showDaysTitle} />\r\n        <SelectMode changeMode = {this.changeMode}\r\n                    showSelectMode = {this.state.showSelectMode}\r\n                    />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst AddEventPanel = ({showAddEvent}) => { //компонент который открывает модальное окно добавления события\r\n  return (\r\n    <div className=\"add-event-panel\">\r\n      <button onClick = {showAddEvent}>+</button>\r\n    </div>\r\n  )}\r\n\r\nconst DaysTitle = ({showDaysTitle}) => { // компонент который выводит подписи к дням недели\r\n  return (\r\n      (showDaysTitle)?\r\n        <div className=\"days-of-week\">\r\n            <span className=\"day-of-week\">S</span>\r\n            <span className=\"day-of-week\">M</span>\r\n            <span className=\"day-of-week\">T</span>\r\n            <span className=\"day-of-week\">W</span>\r\n            <span className=\"day-of-week\">T</span>\r\n            <span className=\"day-of-week\">F</span>\r\n            <span className=\"day-of-week\">S</span>\r\n        </div>\r\n        :'')\r\n  }\r\n\r\nexport default CalendarHeader","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nexport class Day extends Component { // компонент который выводит день в неделе / месяце\r\n\r\n  showEventMarker = () => { //вывод маркеров наличия событий в дне\r\n    const e = this.props.events.find((day) => {\r\n      return day.date === this.props.day.format(\"DD-MM-YYYY\");\r\n    });\r\n    let row = [];\r\n    if (e) {\r\n      for (let i = 0; i < e.events.length; i++){\r\n        row.push(\r\n          <span key = {i} className = {`${(e.events[i].status === 'pending')?'event-pending':(e.events[i].status === 'completed')?'event-completed':'event-rejected'}`}></span>\r\n        )\r\n      }\r\n    } else {\r\n      row.push(\r\n        <div key=''></div>\r\n      )\r\n    }\r\n    return <div className = 'event-marker'>{row}</div>\r\n  }\r\n\r\n  render() {\r\n    const {currentDate, selectedDate, day, index} = this.props,\r\n          formattedDate = moment(day).format(\"D\");\r\n    return (\r\n      <div className = {`day \r\n        ${ (index === 0) ? \"weekend\" : (index === 6) ? \"weekend\" : \"\" }\r\n        ${ moment(day).isSame(currentDate, 'day') ? \"current\" : 'ordinary' }\r\n        ${ moment(day).isSame(selectedDate, 'day') ? \"selected\" : 'ordinary'}` }\r\n        key = {index}\r\n        onClick={() => this.props.setSelectedDate(moment(day, \"DD-MM-YYYY\"))}\r\n      >\r\n      <p>{formattedDate}</p>\r\n      {this.showEventMarker()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Day\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport Day from './Day' \r\n\r\nexport class CalendarBody extends Component { //тело календаря в котором,собственно, выводится сетка дней / недель\r\n\r\n    renderWeek = () => { //отобразить неделю\r\n        const { selectedDate, currentDate } = this.props;\r\n        let startOfWeek;\r\n    \r\n          startOfWeek = moment(selectedDate).startOf('week');\r\n       \r\n        const days = [];\r\n        let day = startOfWeek;\r\n    \r\n          for (let i = 0; i < 7; i++) {\r\n  \r\n            days.push(\r\n              <Day  key = {i} index = {i} day = {day}\r\n                    events = {this.props.events}\r\n                    currentDate = {currentDate}\r\n                    selectedDate = {selectedDate}\r\n                    setSelectedDate = {this.props.setSelectedDate}\r\n                    />\r\n            );\r\n    \r\n          day = day.clone().add(1, 'd');\r\n        }\r\n        return(   \r\n          <div className = \"month\">\r\n            <div className = \"week\">\r\n              { days }\r\n            </div>\r\n          </div>      \r\n        ); \r\n      }\r\n    \r\n      renderMonth = () => { //отобразить месяц\r\n        const { selectedDate, currentDate } = this.props;\r\n        const monthStart = moment(selectedDate).startOf('month'),\r\n              monthEnd = moment(monthStart).endOf('month'),\r\n              startDate = moment(monthStart).startOf('week'),\r\n              rows = [];\r\n              \r\n        let days = [],\r\n            day = startDate;\r\n        \r\n          while (day <= monthEnd) {\r\n            for (let i = 0; i < 7; i++) {\r\n    \r\n              if (!moment(day).isSame(monthStart, 'month')){\r\n                days.push(\r\n                  <div className=\"space\" key = {day}></div>\r\n                );\r\n              } else {\r\n                days.push(\r\n                  <Day  key = {i} index = {i} day = {day}\r\n                        events = {this.props.events}\r\n                        currentDate = {currentDate}\r\n                        selectedDate = {selectedDate}\r\n                        setSelectedDate = {this.props.setSelectedDate}\r\n                        />\r\n                );\r\n              }\r\n              day = moment(day).add(1, 'days');\r\n            }\r\n            rows.push(\r\n              <div className=\"week\" key = {day}>\r\n                {days}\r\n              </div>\r\n            );\r\n            days = [];\r\n          }\r\n        return rows;\r\n      }\r\n\r\n  render() {\r\n    const {mode} = this.props;\r\n    return (\r\n      <div className=\"month\">\r\n        { ( mode === 'month' ) ? this.renderMonth() : ( mode === 'week' ) ? this.renderWeek() : '' }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CalendarBody","import React, { Component } from 'react';\r\nimport moment from 'moment'; \r\n\r\nexport class EventList extends Component { //Список всех/оставшихся событий за месяц/неделю\r\n  renderEvents = () => { //вывод событий в зависимости от выбранной даты / режима отображения\r\n    let events;\r\n    if (this.props.mode === 'month'){\r\n      if (moment(this.props.selectedDate).isSame(this.props.currentDate, 'month')) {\r\n        events = this.props.events.filter((day)=>{\r\n          return moment(day.date,'DD-MM-YYYY').isBetween(this.props.currentDate, moment(this.props.currentDate).endOf('month'));\r\n        });\r\n      } else {\r\n        events = this.props.events.filter((day)=>{\r\n          return moment(day.date,'DD-MM-YYYY').isBetween(moment(this.props.selectedDate).startOf('month').subtract(1,'day'), moment(this.props.selectedDate).endOf('month'));\r\n        });\r\n      }\r\n    } else if (this.props.mode === 'week') {\r\n      if (moment(this.props.selectedDate).isSame(this.props.currentDate, 'week')) {\r\n        events = this.props.events.filter((day)=>{\r\n          return moment(day.date,'DD-MM-YYYY').isBetween(this.props.currentDate, moment(this.props.currentDate).endOf('week'));\r\n        });\r\n      } else {\r\n        events = this.props.events.filter((day)=>{\r\n          return moment(day.date,'DD-MM-YYYY').isBetween(moment(this.props.selectedDate).startOf('week'), moment(this.props.selectedDate).endOf('week'));\r\n        });\r\n      }\r\n    }\r\n      return events.map((day, index) => {\r\n        return (\r\n          <div className = 'event-container' key = {index}>\r\n            <div className = 'event-date'>\r\n              <h2>{moment(day.date,'DD-MM-YYYY').format(\"ddd, D MMM\")}</h2>\r\n            </div>\r\n          <div className = 'events'>\r\n            {day.events\r\n              .sort((a,b) => { return moment(a.time,'h:mm').diff(moment(b.time,'h:mm'),'minutes')})\r\n              .map((event, index) => {\r\n                return (\r\n                  <EventShortcut  event = {event}\r\n                                  key = {index}\r\n                                  index = {index}\r\n                                  day = {day}\r\n                                  setSelectedEvent = {this.props.setSelectedEvent}/>\r\n                )\r\n              })\r\n            }\r\n            </div>\r\n          </div>\r\n        )\r\n    }); \r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n          {this.renderEvents()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass EventShortcut extends Component { //компонент отетственный за вывод событий в списке всех / оставшихся событий за месяц/неделю\r\n  render(){\r\n  const {event, day, index} = this.props;\r\n  return(\r\n    <div className = {`event ${(event.status === 'pending')?'event-pending':(event.status === 'completed')?'event-completed':'event-rejected'}`}\r\n    key = {index}  onClick = {() => this.props.setSelectedEvent({date: day.date, event: event})}>\r\n      <div className = \"event-row\">\r\n          <h5>{event.name}</h5>\r\n          <span className = \"event-time\">{event.time}</span>\r\n      </div>\r\n      <div className = 'event-description-row'>\r\n        <p className = \"event-description\">{event.body}</p>\r\n        <span className = {`${(event.status === 'completed')?'completed-marker':(event.status === 'rejected')?'rejected-marker':''}`}></span>\r\n      </div>\r\n    </div>\r\n  )}\r\n}\r\n\r\nexport default EventList","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nexport class TodayEvents extends Component { //компонент реализует слайдер ответственный за вывод событий выбранного дня, смены статуса этих событий\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      currentIndex: 0,\r\n      translateValue: 0\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps = (props) =>{ //установка нчального индекса в слайдере\r\n    this.setState({\r\n      currentIndex: props.index,\r\n      translateValue: props.index * -300\r\n    });\r\n  }\r\n\r\n  goToPrevSlide = () => {//перелистывание слайдера влево\r\n    if(this.state.currentIndex === 0)\r\n      return;\r\n    \r\n    this.props.setIndex(this.state.currentIndex - 1);\r\n    this.setState(prevState => ({\r\n      currentIndex: prevState.currentIndex - 1,\r\n      translateValue: prevState.translateValue + 300\r\n    }))\r\n  }\r\n\r\n  goToNextSlide = () => {//перелистывание слайдера вправо\r\n    if(this.state.currentIndex === this.props.day.events.length - 1) {\r\n      return this.setState({\r\n        currentIndex: 0,\r\n        translateValue: 0\r\n      })\r\n    }\r\n    this.props.setIndex(this.state.currentIndex + 1);\r\n    this.setState(prevState => ({\r\n      currentIndex: prevState.currentIndex + 1,\r\n      translateValue: prevState.translateValue + -(300)\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      {(this.props.day)\r\n      ?\r\n        <div className=\"slider\">\r\n          <div className=\"slider-wrapper\"\r\n            style={{\r\n              transform: `translateX(${this.state.translateValue}px)`,\r\n              transition: 'transform ease-out 0.45s'\r\n            }}>\r\n              {\r\n                this.props.day.events\r\n                .sort((a,b) => { return moment(a.time,'h:mm').diff(moment(b.time,'h:mm'),'minutes')})\r\n                .map((event, i) => (\r\n                  <Slide  key = {i}\r\n                          event = {event}\r\n                          setSelectedEvent = {this.props.setSelectedEvent}\r\n                          day = {this.props.day}\r\n                          changeStatusEvent = {this.props.changeStatusEvent}\r\n                          />\r\n                ))\r\n              }\r\n          </div>\r\n\r\n          <LeftArrow\r\n          goToPrevSlide = {this.goToPrevSlide}\r\n          />\r\n\r\n          <RightArrow\r\n          goToNextSlide = {this.goToNextSlide}\r\n          />\r\n        </div>\r\n      :\r\n        <div className = 'no-events-today'>There is no events today</div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Slide = ({ event, day, setSelectedEvent, changeStatusEvent }) => { //компонент являет собой один слайд (событие) в слайдере\r\n  return  <div className = \"slide\">\r\n            <div className = \"slide-content\">\r\n              <div className = 'content-wrapper' onClick = {() => setSelectedEvent({date: day.date, event: event})}>\r\n                <h5>{event.name}</h5>\r\n                <p className = \"event-description\">{event.body}</p>\r\n                <div className = 'event-time-row'>\r\n                  <span className = 'time-starts'>{event.time}</span>\r\n                  <span className = 'time-left'>{`starts: ${moment(`${day.date}|${event.time}`, \"DD-MM-YYYY|h:mm\").fromNow()}`}</span>\r\n                </div>\r\n              </div>\r\n              <div className = 'btn-today-container'>\r\n                <button id = 'first-btn' onClick = {() => changeStatusEvent('completed', day.date, event.time)}>complete</button>\r\n                <button onClick = {() => changeStatusEvent('rejected', day.date, event.time)}>reject</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n}\r\n\r\nconst LeftArrow = (props) => { //кнопка для перелистывания слайдера влево\r\n  return (\r\n    <div className=\"backArrow arrow\" onClick = {props.goToPrevSlide}></div>\r\n  );\r\n}\r\n\r\nconst RightArrow = (props) => {//кнопка для перелистывания слайдера вправо\r\n  return (\r\n    <div className=\"nextArrow arrow\" onClick = {props.goToNextSlide}></div>\r\n  );\r\n}\r\n\r\nexport default TodayEvents","import React, { Component } from 'react';\r\nimport EventList from './EventList';\r\nimport TodayEvents from './TodayEvents';\r\nimport moment from 'moment';\r\n\r\nexport class Events extends Component { //компонент ответственный за вывод событий\r\n\r\n    changeStatusEvent = (status, date, time) => {//смена статуса события с помощью кнопок в слайдере\r\n      let e = [...this.props.events];\r\n      const b = e.find(day =>{\r\n        return day.date === date;\r\n      })\r\n      const event = b.events.find(e => e.time === time);\r\n\r\n      event.status = status;\r\n      this.props.setEvents(e); \r\n    }\r\n\r\n    render() {\r\n      const {selectedDate, events, mode} = this.props,\r\n            title = moment(selectedDate).format(\"dddd, D MMMM\");\r\n      return (\r\n      <div className = 'events-container'>\r\n          <EventHeader title = {title} /> \r\n          <TodayEvents day = {events.find((day) => {return day.date === moment(this.props.selectedDate).format(\"DD-MM-YYYY\")})}\r\n                        selectedDate = {selectedDate}\r\n                        setSelectedEvent = {this.props.setSelectedEvent}\r\n                        changeStatusEvent = {this.changeStatusEvent}\r\n                        index = {this.props.curIndex}\r\n                        setIndex = {this.props.setIndex}\r\n                      />\r\n          <EventList  events = {events}\r\n                      mode = {mode}\r\n                      selectedDate = {selectedDate}\r\n                      setSelectedEvent = {this.props.setSelectedEvent}/>\r\n      </div>\r\n      );\r\n    }\r\n    }\r\n\r\n    const EventHeader = ({title}) => { // шапка в которой отображается выбранная дата\r\n      return (\r\n        <div className = 'event-header'>\r\n          <div className = 'selected-date'>\r\n              {title}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\nexport default Events\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport CalendarHeader from './components/CalendarHeader';\nimport CalendarBody from './components/CalendarBody';\nimport Events from './components/Events';\nimport moment from 'moment';\n\nconst events = [ // массив событий\n  {\n    date: '17-02-2019',\n    events:[\n      {status: 'completed', name:'finish work', body: 'finish the test project', time: '8:00'},\n      {status: 'completed', name:'send project', body: 'finally send the project', time: '16:00'},\n      {status: 'pending', name:'exam preparing', body: 'preparing for the exam', time: '16:30'}\n    ]\n  },\n  {\n    date: '18-02-2019',\n    events:[\n      {status: 'pending', name:'consultation', body: 'visit the exam consultation', time: '11:30'},\n      {status: 'pending', name:'exam preparing', body: 'preparing for the exam', time: '11:30'}\n    ]\n  },\n  {\n    date: '19-02-2019',\n    events:[\n      {status: 'pending', name:'exam', body: 'visit the exam', time: '11:30'},\n      {status: 'rejected', name:'preparing', body: 'preparing for the exam', time: '12:00'},\n      {status: 'completed', name:'some completed event', body: 'some completed event', time: '23:47'}\n    ]\n  },\n  {\n    date: '20-02-2019',\n    events:[\n      {status: 'pending', name:'exam preparing', body: 'preparing for the exam', time: '10:00'}\n    ]\n  },\n  {\n    date: '21-02-2019',\n    events:[\n      {status: 'pending', name:'consultation', body: 'visit the exam consultation', time: '11:30'},\n      {status: 'pending', name:'preparing', body: 'preparing for the exam', time: '12:00'}\n    ]\n  },\n  {\n    date: '22-02-2019',\n    events:[\n      {status: 'pending', name:'exam', body: 'visit the exam', time: '8:30'}\n    ]\n  },\n  {\n    date: '01-03-2019',\n    events:[\n      {status: 'pending', name:'practice', body: 'beginning of study', time: '9:00'}\n    ]\n  },\n];\n\nexport class Calendar extends Component { /*  главный компонент календаря, обертка для всех остальных, содержит в своем состоянии\n                                              значения обьединяющие компоненты, функции для установки этих значений */\nconstructor(props){\n    super(props);\n    this.state = {\n      mode: 'month',\n      currentContext: moment(), //текущий контекст для вывода недель / месяцев\n      selectedDate  : moment(), //выбранный день\n      currentDate   : moment(), //текущая дата\n      selectedEvent : null,     //выбранное событие\n      events        : events,   //массив событий\n      curIndex: 0               //текущий индекс для слайдера\n    }\n  }\n\n  setIndex = (index) => {\n    this.setState({\n      curIndex: index\n    })\n  }\n  \n  setSelectedEvent = (data) =>{\n    this.setState({\n      selectedEvent: data,\n    }); \n  }\n\n  setEvents = (data) => {\n    this.setState({\n      events: data\n    }); \n  }\n\n  setMode = (data) => {\n    this.setState(\n      {mode: data\n    });\n  }\n\n  setSelectedDate = day => {\n    this.setState({\n      selectedDate: day,\n      curIndex: 0\n    });\n  }\n\n  setCurrentContext = (data) => {\n    this.setState({\n      currentContext: data\n    });\n  }\n\n  render() {\n    const {mode, selectedDate, selectedEvent, events, currentDate, curIndex} = this.state;\n    return (\n      <div id=\"calendar\">      \n        <CalendarHeader selectedDate = {selectedDate}\n                        mode = {mode}\n                        events = {events}\n                        selectedEvent = {selectedEvent}\n                        setCurrentContext = {this.setCurrentContext}\n                        setSelectedDate = {this.setSelectedDate}\n                        setSelectedEvent = {this.setSelectedEvent}\n                        setEvents = {this.setEvents}\n                        setMode = {this.setMode}\n                        />\n        <CalendarBody mode = {mode}\n                      selectedDate = {selectedDate}\n                      currentDate = {currentDate}\n                      setSelectedDate = {this.setSelectedDate}\n                      events = {events}\n                      />\n        <Events events={events}\n                selectedDate = {selectedDate}\n                mode = {mode}\n                currentDate = {currentDate}\n                setEvents = {this.setEvents}\n                setSelectedEvent = {this.setSelectedEvent}\n                curIndex = {curIndex}\n                setIndex = {this.setIndex}\n                />\n      </div>\n    )\n  }\n}\n\nexport default Calendar","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calendar from './Calendar';\n\nReactDOM.render(<Calendar />, document.getElementById('root'));"],"sourceRoot":""}