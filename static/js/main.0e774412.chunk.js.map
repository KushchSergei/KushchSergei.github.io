{"version":3,"sources":["components/SelectMode.jsx","components/AddEvent.jsx","components/CalendarHeader.jsx","components/Day.jsx","components/CalendarBody.jsx","components/EventList.jsx","components/TodayEvents.jsx","components/Events.jsx","Calendar.js","index.js"],"names":["SelectMode","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","onClick","props","changeMode","Component","AddEvent","_this","call","getDefaultState","name","body","time","eventAdd","e","preventDefault","addEvent","objectSpread","state","setState","hideAddEvent","cancel","onNameHandler","event","target","onBodyHandler","onTimeHandler","displayAddEvent","type","placeholder","onChange","CalendarHeader","add","_this$props","mode","currentContext","selectedDate","setCurrentContext","moment","setSelectedDate","sub","_this$props2","subtract","setMode","showSelectMode","showDaysTitle","refs","monthName","classList","remove","toggle","_ref","newEvent","esm_extends","toConsumableArray","events","before","find","day","date","format","push","setEvents","showAddEvent","renderTitle","_this$props3","endFormat","startOfWeek","startOf","endOf","isSame","endOfWeek","concat","renderDaysTitle","_this$props4","prevMonth","nextMonth","components_AddEvent","ref","components_SelectMode","Day","_getPrototypeOf2","_len","length","args","Array","_key","showEventMarker","row","i","_this2","currentDate","index","formattedDate","CalendarBody","renderWeek","days","components_Day","clone","renderMonth","monthStart","monthEnd","rows","EventList","renderEvents","filter","isBetween","map","sort","b","diff","TodayEvents","Events","title","components_TodayEvents","components_EventList","Calendar","data","_this$state","id","components_CalendarHeader","components_CalendarBody","components_Events","ReactDOM","render","src_Calendar","document","getElementById"],"mappings":"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","file":"static/js/main.0e774412.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class SelectMode extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"selectmode\">\r\n        <button onClick = {this.props.changeMode} className=\"selectmode\"> \r\n            Month\r\n        </button>\r\n        <button onClick = {this.props.changeMode} className=\"selectmode\">\r\n            Week\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SelectMode\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddEvent extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      body: '',\r\n      time: ''\r\n    }\r\n  }\r\n\r\n  getDefaultState = () => {\r\n    return {\r\n      name: '',\r\n      body: '',\r\n      time: ''\r\n    };\r\n  }\r\n\r\n    eventAdd = (e) => {\r\n      e.preventDefault();\r\n      this.props.addEvent({\r\n        ...this.state\r\n      });\r\n      this.setState(this.getDefaultState());\r\n      this.props.hideAddEvent();\r\n    }\r\n\r\n    cancel = () => {\r\n      this.setState(this.getDefaultState());\r\n      this.props.hideAddEvent();\r\n    }\r\n  \r\n    onNameHandler = (event) => {\r\n      this.setState({\r\n        name: event.target.value\r\n      });\r\n    };\r\n\r\n    onBodyHandler = (event) => {\r\n      this.setState({\r\n        body: event.target.value\r\n      });\r\n    };\r\n\r\n    onTimeHandler = (event) => {\r\n      this.setState({\r\n        time: event.target.value\r\n      });\r\n    };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className = 'add-container'>\r\n        {this.props.displayAddEvent ? \r\n        <div className = 'add-event-modal'>\r\n          <div className=\"add-event-header\">\r\n              <button onClick={this.cancel}>✕</button>\r\n              <h5>New event</h5>\r\n              <button  onClick={this.eventAdd} >✓</button>\r\n          </div>\r\n          <div className = 'add-event-form'>\r\n            <div className = 'add-event-input-block'>\r\n              <h5>event name</h5>\r\n              <input type = \"text\" name = \"name\" placeholder = 'input here' value = {this.state.name} onChange = {this.onNameHandler}/>\r\n            </div>\r\n            <div className = 'add-event-input-block'>\r\n              <h5>event description</h5>\r\n              <input type = \"text\" name = \"body\" placeholder = 'input here' value = {this.state.body} onChange = {this.onBodyHandler}/>\r\n            </div>\r\n            <div className = 'add-event-input-block'>\r\n              <h5>start time</h5>\r\n              <input type = \"time\" name = \"time\" value = {this.state.time} onChange = {this.onTimeHandler}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        : ''}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddEvent\r\n","import React, { Component } from 'react';\r\nimport SelectMode from './SelectMode';\r\nimport moment from 'moment';\r\nimport AddEvent from './AddEvent';\r\n\r\nexport class CalendarHeader extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            displayAddEvent: false,\r\n            showDaysTitle  : true,\r\n            showSelectMode : false,\r\n        }\r\n    }\r\n\r\n    add = () => {\r\n        const {mode, currentContext,selectedDate} = this.props;\r\n        if (mode === 'month'){\r\n          this.props.setCurrentContext(moment(currentContext).add(1, 'months'));\r\n          this.props.setSelectedDate(moment(selectedDate).add(1,'month'));\r\n        } else if (this.props.mode === 'week') {\r\n          this.props.setCurrentContext(moment(currentContext).add(1, 'week'));\r\n          this.props.setSelectedDate(moment(selectedDate).add(1,'week'));\r\n        } \r\n      }\r\n    \r\n    sub = () => {\r\n        const {mode, currentContext,selectedDate} = this.props;\r\n        if (mode === 'month'){\r\n          this.props.setCurrentContext(moment(currentContext).subtract(1, 'months'));\r\n          this.props.setSelectedDate(moment(selectedDate).subtract(1,'month'));\r\n        } else if (this.props.mode === 'week') {\r\n          this.props.setCurrentContext(moment(currentContext).subtract(1, 'week'));\r\n          this.props.setSelectedDate(moment(selectedDate).subtract(1,'week'));\r\n        } \r\n      }\r\n\r\n    changeMode = () => {\r\n        if (this.props.mode === 'month'){\r\n          this.props.setMode('week');\r\n        } else if (this.props.mode === 'week') {\r\n          this.props.setMode('month');\r\n        }\r\n        this.setState({showSelectMode: false, showDaysTitle: true});\r\n        this.refs.monthName.classList.remove(\"active\");\r\n      }    \r\n\r\n    SelectMode = () =>{\r\n        if (this.state.showSelectMode === false){\r\n            this.setState({showSelectMode: true, showDaysTitle: false});\r\n            this.refs.monthName.classList.toggle(\"active\");\r\n        } else {\r\n            this.setState({showSelectMode: false, showDaysTitle: true});\r\n            this.refs.monthName.classList.remove(\"active\");\r\n        }\r\n      }    \r\n\r\n    addEvent = ({...event}) => {\r\n          const e = [...this.props.events],\r\n                before = e.find(day =>{\r\n                    return day.date === this.props.selectedDate.format(\"DD-MM-YYYY\");\r\n                });\r\n          let newEvent;\r\n          if (!before) {\r\n            newEvent = {\r\n              date: this.props.selectedDate.format(\"DD-MM-YYYY\"),\r\n              events: [event]\r\n            };\r\n            e.push(newEvent);\r\n          } else {\r\n            before.events.push(event);\r\n          }\r\n          this.props.setEvents(e);  \r\n      }\r\n\r\n    showAddEvent = () =>{\r\n        this.setState({displayAddEvent: true});\r\n    }\r\n\r\n    hideAddEvent = () =>{\r\n        this.setState({displayAddEvent: false});\r\n    }\r\n\r\n    renderTitle = () =>{\r\n        const { selectedDate, mode } = this.props;   \r\n\r\n        if (mode === 'month'){\r\n            const monthYear = moment(selectedDate).format(\"YYYY MMMM\");  \r\n            return monthYear;\r\n        } else if (mode === 'week') {\r\n            const startOfWeek = moment(selectedDate).startOf('week').format('MMM D');\r\n            let endFormat;\r\n\r\n            if (moment(moment(selectedDate).endOf('week')).isSame(moment(selectedDate).startOf('week'), 'month')){\r\n                endFormat = 'D';\r\n            } else {\r\n                endFormat = 'MMM D';\r\n            }\r\n            const endOfWeek = moment(selectedDate).endOf('week').format(endFormat);\r\n\r\n            return `${startOfWeek} - ${endOfWeek}`;\r\n        }\r\n    }\r\n\r\n    renderDaysTitle = () => {\r\n        if (this.state.showDaysTitle) \r\n        return (\r\n            <div className=\"days-of-week\">\r\n                <span className=\"day-of-week\">S</span>\r\n                <span className=\"day-of-week\">M</span>\r\n                <span className=\"day-of-week\">T</span>\r\n                <span className=\"day-of-week\">W</span>\r\n                <span className=\"day-of-week\">T</span>\r\n                <span className=\"day-of-week\">F</span>\r\n                <span className=\"day-of-week\">S</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {  \r\n        const { selectedDate, mode} = this.props,\r\n            prevMonth = moment(moment(selectedDate).subtract(1, 'months')).format(\"MMM\"),\r\n            nextMonth = moment(moment(selectedDate).add(1, 'months')).format(\"MMM\");\r\n\r\n    return (\r\n    <div className=\"calendar-header\">\r\n        <AddEvent addEvent = {this.addEvent} hideAddEvent = {this.hideAddEvent} displayAddEvent = {this.state.displayAddEvent}/>\r\n        <div className=\"add-event-panel\">\r\n          <button onClick = {this.showAddEvent}>+</button>\r\n        </div>\r\n        <div className=\"calendar-navigation\">\r\n            <button className = \"nav-btn prev-btn\" onClick = {this.sub}>{(mode === 'month') ? prevMonth : 'prev'}</button>\r\n            <span onClick = { this.SelectMode } className=\"current-month\" ref=\"monthName\">{this.renderTitle()}</span>\r\n            <button className = \"nav-btn next-btn\" onClick = {this.add }>{(mode === 'month') ? nextMonth : 'next'}</button>\r\n        </div>\r\n        {this.renderDaysTitle()}\r\n        {(this.state.showSelectMode) ? <SelectMode changeMode={this.changeMode}/> : ''}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CalendarHeader","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nexport class Day extends Component {\r\n\r\n  showEventMarker = () => {\r\n    const e = this.props.events.find((day) => {\r\n      return day.date === this.props.day.format(\"DD-MM-YYYY\");\r\n    });\r\n    let row = [];\r\n    if (e) {\r\n      for (let i = 0; i < e.events.length; i++){\r\n        row.push(\r\n          <span key = {i}></span>\r\n        )\r\n      }\r\n    } else {\r\n      row.push(\r\n        <div key=''></div>\r\n      )\r\n    }\r\n    return <div className = 'event-marker'>{row}</div>\r\n  }\r\n\r\n  render() {\r\n    const {currentDate, selectedDate, day, index} = this.props,\r\n          formattedDate = moment(day).format(\"D\");\r\n    return (\r\n      <div className = {`day \r\n        ${ (index === 0) ? \"weekend\" : (index === 6) ? \"weekend\" : \"\" }\r\n        ${ moment(day).isSame(currentDate, 'day') ? \"current\" : 'ordinary' }\r\n        ${ moment(day).isSame(selectedDate, 'day') ? \"selected\" : 'ordinary'}` }\r\n        key = {index}\r\n        onClick={() => this.props.setSelectedDate(moment(day, \"DD-MM-YYYY\"))}\r\n      >\r\n      <p>{formattedDate}</p>\r\n      {this.showEventMarker()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Day\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport Day from './Day' \r\n\r\nexport class CalendarBody extends Component {\r\n\r\n    renderWeek = () => {\r\n        const { selectedDate, currentDate } = this.props;\r\n        let startOfWeek;\r\n    \r\n          startOfWeek = moment(selectedDate).startOf('week');\r\n       \r\n        const days = [];\r\n        let day = startOfWeek;\r\n    \r\n          for (let i = 0; i < 7; i++) {\r\n  \r\n            days.push(\r\n              <Day  key = {i} index = {i} day = {day}\r\n                    events = {this.props.events}\r\n                    currentDate = {currentDate}\r\n                    selectedDate = {selectedDate}\r\n                    setSelectedDate = {this.props.setSelectedDate}\r\n                    />\r\n            );\r\n    \r\n          day = day.clone().add(1, 'd');\r\n        }\r\n        return(   \r\n          <div className = \"month\">\r\n            <div className = \"week\">\r\n              { days }\r\n            </div>\r\n          </div>      \r\n        ); \r\n      }\r\n    \r\n      renderMonth = () => {\r\n        const { selectedDate, currentDate } = this.props;\r\n        const monthStart = moment(selectedDate).startOf('month'),\r\n              monthEnd = moment(monthStart).endOf('month'),\r\n              startDate = moment(monthStart).startOf('week'),\r\n              rows = [];\r\n              \r\n        let days = [],\r\n            day = startDate;\r\n        \r\n          while (day <= monthEnd) {\r\n            for (let i = 0; i < 7; i++) {\r\n    \r\n              if (!moment(day).isSame(monthStart, 'month')){\r\n                days.push(\r\n                  <div className=\"space\" key = {day}></div>\r\n                );\r\n              } else {\r\n                days.push(\r\n                  <Day  key = {i} index = {i} day = {day}\r\n                        events = {this.props.events}\r\n                        currentDate = {currentDate}\r\n                        selectedDate = {selectedDate}\r\n                        setSelectedDate = {this.props.setSelectedDate}\r\n                        />\r\n                );\r\n              }\r\n              day = moment(day).add(1, 'days');\r\n            }\r\n            rows.push(\r\n              <div className=\"week\" key = {day}>\r\n                {days}\r\n              </div>\r\n            );\r\n            days = [];\r\n          }\r\n        return <div className=\"month\">{ rows }</div>;\r\n      }\r\n\r\n  render() {\r\n    const {mode} = this.props;\r\n    return (\r\n      <div>\r\n        { ( mode === 'month' ) ? this.renderMonth() : ( mode === 'week' ) ? this.renderWeek() : '' }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CalendarBody","import React, { Component } from 'react';\r\nimport moment from 'moment'; \r\n\r\nexport class EventList extends Component {\r\n\r\n  renderEvents = () => {\r\n    let events;\r\n    if (this.props.mode === 'month'){\r\n      if (moment(this.props.selectedDate).isSame(this.props.currentDate, 'month')) {\r\n        events = this.props.events.filter((day)=>{\r\n          return moment(day.date,'DD-MM-YYYY').isBetween(this.props.currentDate, moment(this.props.currentDate).endOf('month'));\r\n        });\r\n      } else {\r\n        events = this.props.events.filter((day)=>{\r\n          return moment(day.date,'DD-MM-YYYY').isBetween(moment(this.props.selectedDate).startOf('month'), moment(this.props.selectedDate).endOf('month'));\r\n        });\r\n      }\r\n    } else if (this.props.mode === 'week') {\r\n      if (moment(this.props.selectedDate).isSame(this.props.currentDate, 'week')) {\r\n        events = this.props.events.filter((day)=>{\r\n          return moment(day.date,'DD-MM-YYYY').isBetween(this.props.currentDate, moment(this.props.currentDate).endOf('week'));\r\n        });\r\n      } else {\r\n        events = this.props.events.filter((day)=>{\r\n          return moment(day.date,'DD-MM-YYYY').isBetween(moment(this.props.selectedDate).startOf('week'), moment(this.props.selectedDate).endOf('week'));\r\n        });\r\n      }\r\n    }\r\n      return events.map((day, index) => {\r\n        return (\r\n          <div className = 'event-container' key = {index}>\r\n            <div className = 'event-date'>\r\n              <h2>{moment(day.date,'DD-MM-YYYY').format(\"ddd, D MMM\")}</h2>\r\n            </div>\r\n          <div className = 'events'>\r\n            {day.events\r\n              .sort((a,b) => { return moment(a.time,'h:mm').diff(moment(b.time,'h:mm'),'minutes')})\r\n              .map((event, index) => {\r\n                return (\r\n                  <div className = 'event' key={index}>\r\n                    <div className=\"event-row\">\r\n                        <h5>{event.name}</h5>\r\n                        <span className=\"event-time\">{event.time}</span>\r\n                    </div>\r\n                    <p className=\"event-description\">{event.body}</p>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n            </div>\r\n          </div>\r\n        )\r\n    }); \r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          {this.renderEvents()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EventList","import React, { Component } from 'react'\r\n\r\nexport class TodayEvents extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodayEvents\r\n","import React, { Component } from 'react';\r\nimport EventList from './EventList';\r\nimport TodayEvents from './TodayEvents';\r\nimport moment from 'moment';\r\n\r\nexport class Events extends Component {\r\n  \r\n    render() {\r\n        const {selectedDate, events, mode} = this.props,\r\n              title = moment(selectedDate).format(\"dddd, D MMMM\");\r\n        return (\r\n        <div className = 'events-container'>\r\n            <div className = 'event-header'>\r\n                <div className = 'selected-date'>\r\n                    {title}\r\n                </div>\r\n            </div>\r\n            <TodayEvents />\r\n            <EventList  events={events}\r\n                        selectedDate = {selectedDate}\r\n                        mode = {mode}/>\r\n        </div>\r\n        );\r\n    }\r\n    }\r\n\r\nexport default Events\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport CalendarHeader from './components/CalendarHeader';\nimport CalendarBody from './components/CalendarBody';\nimport Events from './components/Events';\nimport moment from 'moment';\n\nconst events = [\n  {\n      date: '22-02-2019',\n      events:[\n          {name:'event name', body: 'event body', time: '11:00'},\n          {name:'event name2', body: 'event bod2', time: '12:00'}\n      ]\n  },\n  {\n      date: '20-02-2019',\n      events:[\n          {name:'event 3', body: 'event 3', time: '12:00'}\n      ]\n  },\n  {\n    date: '14-02-2019',\n    events:[\n        {name:'event 3', body: 'event 3', time: '12:00'}\n    ]\n  },\n  {\n    date: '28-03-2019',\n    events:[\n        {name:'other month', body: 'other month', time: '00:00'}\n    ]\n  }\n];\n\nexport class Calendar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      mode: 'month',\n      currentContext : moment(),\n      selectedDate   : moment(),\n      currentDate    : moment(),\n      events: events\n    }\n  }\n  \n  setEvents = (data) => {\n    this.setState({\n      events: data\n    }); \n  }\n\n  setMode = (data) => {\n    this.setState(\n      {mode: data\n    });\n  }\n\n  setSelectedDate = day => {\n    this.setState({\n      selectedDate: day\n    });\n  }\n\n  setCurrentContext = (data) => {\n    this.setState({\n      currentContext: data\n    });\n  }\n\n  render() {\n    const {mode, selectedDate, events, currentDate} = this.state;\n    return (\n      <div id=\"calendar\">      \n        <CalendarHeader selectedDate = {selectedDate}\n                        mode = {mode}\n                        events = {events}\n                        setCurrentContext = {this.setCurrentContext}\n                        setSelectedDate = {this.setSelectedDate}\n                        setEvents = {this.setEvents}\n                        setMode = {this.setMode}\n                        />\n        <CalendarBody mode = {mode}\n                      selectedDate = {selectedDate}\n                      currentDate = {currentDate}\n                      setSelectedDate = {this.setSelectedDate}\n                      events = {events}\n                      />\n        <Events events={events}\n                selectedDate = {selectedDate}\n                mode = {mode}\n                currentDate = {currentDate}\n                />\n      </div>\n    )\n  }\n}\n\nexport default Calendar","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calendar from './Calendar';\n\nReactDOM.render(<Calendar />, document.getElementById('root'));"],"sourceRoot":""}